:root {
  /* Color palette */
  --primary-color: #2563eb;
  --primary-color-fallback: #0066cc;
  --secondary-color: #64748b;
  --accent-color: #f59e0b;
  --background-color: #ffffff;
  --background-color-fallback: #f8fafc;
  --text-color: #1e293b;
  --text-color-fallback: #334155;
  --border-color: #e2e8f0;
  
  /* Typography */
  --font-family-primary: 'Inter', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  --font-family-fallback: 'Georgia', 'Times New Roman', serif;
  --font-size-base: 1rem;
  --font-size-large: 1.25rem;
  --font-size-small: 0.875rem;
  --line-height-base: 1.6;
  
  /* Spacing */
  --spacing-xs: 0.25rem;
  --spacing-sm: 0.5rem;
  --spacing-md: 1rem;
  --spacing-lg: 1.5rem;
  --spacing-xl: 2rem;
  --spacing-2xl: 3rem;
  
  /* Layout */
  --container-max-width: 75rem;
  --header-height: 4rem;
  --border-radius: 0.5rem;
  --box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  
  /* Animation */
  --transition-fast: 0.15s ease-in-out;
  --transition-base: 0.3s ease-in-out;
  --transition-slow: 0.5s ease-in-out;
}

/* Import custom fonts */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: local('Inter Variable'), local('InterVariable'), local('Inter'),
       url('../assets/fonts/InterVariable.woff2') format('woff2');
}
@import url('css/rwd.css');
@import url('css/print.css');

/* 
 * BASELINE 2024 FEATURE: CSS Nesting
 * CSS Nesting allows developers to nest CSS selectors within parent rules, mirroring the HTML structure
 * and improving code maintainability. 
 * 
 * EXTRA CREDIT FEATURES:
 * - color-mix(): Used in header background gradient and link hover states to blend colors dynamically
 * - :has() selector: Used in project-card and fieldset elements to style based on contained elements
 */

/* Reset and base styles */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 16px;
  scroll-behavior: smooth;
}

body {
  font-family: var(--font-family-primary, var(--font-family-fallback));
  font-size: var(--font-size-base);
  line-height: var(--line-height-base);
  color: var(--text-color, var(--text-color-fallback));
  background-color: var(--background-color, var(--background-color-fallback));
  min-height: 100dvh;
  display: flex;
  flex-direction: column;
}

/* Typography */
h1, h2, h3, h4, h5, h6 {
  font-weight: 600;
  line-height: 1.3;
  margin-bottom: var(--spacing-md);
}

h1 {
  font-size: 2.5rem;
  color: var(--primary-color, var(--primary-color-fallback));
}

h2 {
  font-size: 2rem;
  margin-top: var(--spacing-xl);
}

h3 {
  font-size: 1.5rem;
}

p {
  margin-bottom: var(--spacing-md);
}

a {
  color: var(--primary-color, var(--primary-color-fallback));
  text-decoration: none;
  transition: color var(--transition-fast);
}

a:hover {
  /* Using color-mix() for extra credit - creates a lighter blend on hover */
  color: color-mix(in srgb, var(--primary-color, var(--primary-color-fallback)) 70%, white 30%);
  text-decoration: underline;
}

strong {
  font-weight: 600;
}

em {
  font-style: italic;
}

code {
  font-family: 'Courier New', monospace;
  background-color: var(--border-color);
  padding: 0.125rem 0.25rem;
  border-radius: 0.25rem;
  font-size: 0.875em;
}

/* Layout using CSS Grid and Flexbox */
.container {
  max-width: var(--container-max-width);
  margin: 0 auto;
  padding: 0 var(--spacing-md);
}

/* Header */
header {
  /* Using color-mix() for extra credit - blends primary and secondary colors */
  background: linear-gradient(135deg, 
    color-mix(in srgb, var(--primary-color, var(--primary-color-fallback)) 85%, var(--secondary-color) 15%),
    color-mix(in srgb, var(--secondary-color) 85%, var(--primary-color, var(--primary-color-fallback)) 15%));
  color: white;
  padding: var(--spacing-md) 0;
  box-shadow: var(--box-shadow);
  position: sticky;
  top: 0;
  z-index: 100;
}

header-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  gap: var(--spacing-md);
}

h1 {
  font-size: 1.75rem;
  color: white;
  margin-bottom: 0;
  animation: fadeInDown 0.6s ease-out;
}

/* Navigation - Using CSS Nesting (Baseline 2024 feature) */
nav {
  position: relative;
  
  /* Hamburger menu toggle checkbox (hidden) */
  .nav-toggle {
    display: none;
  }
  
  /* Hamburger icon button */
  .hamburger {
    display: none;
    flex-direction: column;
    justify-content: space-around;
    width: 2rem;
    height: 2rem;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
    z-index: 10;
    
    span {
      width: 2rem;
      height: 3px;
      background: white;
      border-radius: 10px;
      transition: all var(--transition-base);
      transform-origin: 1px;
    }
  }
  
  /* Navigation menu */
  .nav-menu {
    display: flex;
    list-style: none;
    gap: var(--spacing-lg);
    flex-wrap: wrap;
    margin: 0;
    padding: 0;
  }
  
  /* Using :has() selector for extra credit - styles nav when it contains current page link */
  &:has([aria-current="page"]) {
    .nav-menu {
      border-bottom: 2px solid rgba(255, 255, 255, 0.3);
    }
  }
  
  /* Navigation links using nested CSS */
  a {
    color: white;
    padding: var(--spacing-sm) var(--spacing-md);
    border-radius: var(--border-radius);
    transition: all var(--transition-base);
    position: relative;
    
    &:hover {
      background-color: rgba(255, 255, 255, 0.1);
      transform: translateY(-2px);
    }
    
    &[aria-current="page"] {
      background-color: rgba(255, 255, 255, 0.2);
      font-weight: 500;
    }
  }
}

/* Main content */
main {
  flex: 1;
  padding: var(--spacing-xl) 0;
}

/* About page specific layout - Using CSS Nesting */
about-layout {
  display: grid;
  grid-template-columns: 2fr 1fr;
  gap: var(--spacing-xl);
  align-items: start;
}

intro-section {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
}

.profile-image {
  width: 200px;
  height: 200px;
  border-radius: 50%;
  object-fit: cover;
  box-shadow: var(--box-shadow);
  transition: transform var(--transition-base);
  
  &:hover {
    transform: scale(1.05);
  }
}

.quick-facts {
  background: linear-gradient(135deg, #f8fafc, #e2e8f0);
  padding: var(--spacing-lg);
  border-radius: var(--border-radius);
  box-shadow: var(--box-shadow);
  
  ul {
    list-style: none;
  }
  
  li {
    padding: var(--spacing-sm) 0;
    border-bottom: 1px solid var(--border-color);
    
    &:last-child {
      border-bottom: none;
    }
  }
}

/* Progress bar styling */
progress {
  width: 100%;
  height: 8px;
  border-radius: 4px;
  background-color: var(--border-color);
  overflow: hidden;
}

progress::-webkit-progress-bar {
  background-color: var(--border-color);
  border-radius: 4px;
}

progress::-webkit-progress-value {
  background: linear-gradient(90deg, var(--primary-color, var(--primary-color-fallback)), var(--accent-color));
  border-radius: 4px;
}

/* Footer */
footer {
  background: var(--secondary-color);
  color: white;
  text-align: center;
  padding: var(--spacing-lg) 0;
  margin-top: auto;
}

address {
  font-style: normal;
  margin-bottom: var(--spacing-sm);
}

small {
  font-size: var(--font-size-small);
}

/* Animations */
@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Animation classes */
.fade-in {
  animation: fadeInUp 0.6s ease-out;
}

/* Picture element optimization - Using CSS Nesting */
picture {
  display: block;
  width: 100%;
  
  img {
    width: 100%;
    height: auto;
    border-radius: var(--border-radius);
    transition: transform var(--transition-base);
  }
  
  &:hover img {
    transform: scale(1.02);
  }
}

/* Dialog styling */
dialog {
  border: 2px solid var(--border-color);
  border-radius: var(--border-radius);
  padding: var(--spacing-lg);
  background: white;
  box-shadow: var(--box-shadow);
  max-width: 500px;
  width: 90%;
}

dialog::backdrop {
  background: rgba(0, 0, 0, 0.5);
}

/* Dialog trigger button */
.dialog-trigger {
  background: var(--primary-color, var(--primary-color-fallback));
  color: white;
  border: none;
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--border-radius);
  cursor: pointer;
  font-size: var(--font-size-base);
  transition: all var(--transition-base);
  margin-top: var(--spacing-md);
}

.dialog-trigger:hover {
  background: var(--accent-color);
  transform: translateY(-2px);
}

/* Dialog close button */
.dialog-close {
  background: var(--secondary-color);
  color: white;
  border: none;
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--border-radius);
  cursor: pointer;
  font-size: var(--font-size-base);
  transition: all var(--transition-base);
  margin-top: var(--spacing-md);
  float: right;
}

.dialog-close:hover {
  background: #475569;
  transform: translateY(-2px);
}

  /* Project cards using CSS Grid - Using CSS Nesting */
  projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--spacing-lg);
    margin: var(--spacing-xl) 0;
  }
  
  project-card {
    display: block;
    background: white;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    padding: var(--spacing-lg);
    box-shadow: var(--box-shadow);
    transition: all var(--transition-base);
    position: relative;
    overflow: hidden;
    
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 4px;
      background: linear-gradient(90deg, var(--primary-color, var(--primary-color-fallback)), var(--accent-color));
      transform: scaleX(0);
      transition: transform var(--transition-base);
    }
    
    &:hover {
      transform: translateY(-4px);
      box-shadow: 0 10px 25px -3px rgba(0, 0, 0, 0.1);
      
      &::before {
        transform: scaleX(1);
      }
    }
    
    /* Using :has() selector for extra credit - styles cards that contain lists */
    &:has(ul, ol) {
      padding-bottom: var(--spacing-xl);
    }
    
    /* Using :has() selector - enhanced styling for cards with multiple paragraphs */
    &:has(p + p) article {
      border-left: 3px solid var(--accent-color);
      padding-left: var(--spacing-md);
    }
  }
  
  /* Contact form styling */
  .contact-form {
    display: grid;
    gap: var(--spacing-md);
    max-width: 600px;
  }
  fieldset {
    border: 2px solid var(--border-color);
    border-radius: var(--border-radius);
    padding: var(--spacing-lg);
    transition: border-color var(--transition-base);
  }
  
  fieldset:focus-within {
    border-color: var(--primary-color, var(--primary-color-fallback));
  }
  
  legend {
    font-weight: 600;
    padding: 0 var(--spacing-sm);
    color: var(--primary-color, var(--primary-color-fallback));
  }
  
  label {
    display: block;
    margin-bottom: var(--spacing-xs);
    font-weight: 500;
  }
  
  input, textarea {
    width: 100%;
    padding: var(--spacing-sm);
    border: 2px solid var(--border-color);
    border-radius: var(--border-radius);
    font-family: inherit;
    font-size: inherit;
    transition: all var(--transition-base);
  }
  
  input:focus, textarea:focus {
    outline: none;
    border-color: var(--primary-color, var(--primary-color-fallback));
    box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
  }
  
  button {
    background: linear-gradient(135deg, var(--primary-color, var(--primary-color-fallback)), var(--secondary-color));
    color: white;
    border: none;
    padding: var(--spacing-sm) var(--spacing-lg);
    border-radius: var(--border-radius);
    font-weight: 500;
    cursor: pointer;
    transition: all var(--transition-base);
    position: relative;
    overflow: hidden;
  }
  
  button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left var(--transition-slow);
  }
  
  button:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(37, 99, 235, 0.3);
  }
  
  button:hover::before {
    left: 100%;
  }
  
  button:active {
    transform: translateY(0);
  }

  .content-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--spacing-sm);
    margin-bottom: var(--spacing-2xl);
  }

  /* Table styling */
  table {
    width: 100%;
    border-collapse: collapse;
    margin: var(--spacing-lg) 0;
    box-shadow: var(--box-shadow);
    border-radius: var(--border-radius);
    overflow: hidden;
  }
  
  th, td {
    padding: var(--spacing-md);
    text-align: left;
    border-bottom: 1px solid var(--border-color);
  }
  
  th {
    background: linear-gradient(135deg, var(--primary-color, var(--primary-color-fallback)), var(--secondary-color));
    color: white;
    font-weight: 600;
  }
  
  tr:hover {
    background-color: rgba(37, 99, 235, 0.05);
  }

  @media (min-width: 1025px) {
    .content-grid {
        grid-template-columns: 2fr 1fr;
    }
}

/* Contact Page Styles */
.contact-header {
  text-align: center;
  margin-bottom: var(--spacing-2xl);
}

.contact-subtitle {
  font-size: var(--font-size-large);
  color: var(--secondary-color);
  margin-top: var(--spacing-md);
  max-width: 600px;
  margin-left: auto;
  margin-right: auto;
}

.contact-section {
  background: var(--background-color);
  border-radius: var(--border-radius);
  padding: var(--spacing-xl);
  box-shadow: var(--box-shadow);
  border: 1px solid var(--border-color);
  transition: transform var(--transition-base), box-shadow var(--transition-base);
}

.contact-section:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px -5px rgba(0, 0, 0, 0.1);
}

.section-header {
  text-align: center;
  margin-bottom: var(--spacing-xl);
}

.section-description {
  color: var(--secondary-color);
  margin-top: var(--spacing-sm);
  font-size: var(--font-size-small);
}

/* Social Links Styles - Using CSS Nesting */
.social-links {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: var(--spacing-xl);
  margin: var(--spacing-lg) 0;
}

.social-link {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-decoration: none;
  color: var(--text-color);
  transition: all var(--transition-base);
  padding: var(--spacing-md);
  border-radius: var(--border-radius);
  background: rgba(255, 255, 255, 0.5);
  border: 1px solid var(--border-color);
  min-width: 120px;
  
  &:hover {
    transform: translateY(-4px);
    background: rgba(255, 255, 255, 0.9);
    box-shadow: 0 8px 25px -5px rgba(0, 0, 0, 0.15);
    color: var(--primary-color);
    
    .social-icon {
      transform: scale(1.1);
    }
  }
}

.social-icon-wrapper {
  margin-bottom: var(--spacing-sm);
}

.social-icon {
  width: 50px;
  height: 50px;
  border-radius: var(--border-radius);
  transition: transform var(--transition-base);
}

.social-label {
  font-size: var(--font-size-small);
  font-weight: 500;
  text-align: center;
}

/* Contact Form Styles - Using CSS Nesting */
.contact-form {
  max-width: 100%;
  
  fieldset {
    border: 2px solid var(--border-color);
    border-radius: var(--border-radius);
    padding: var(--spacing-lg);
    transition: border-color var(--transition-base);
    
    &:focus-within {
      border-color: var(--primary-color, var(--primary-color-fallback));
    }
    
    /* Using :has() selector for extra credit - styles fieldset when it contains focused input */
    &:has(input:focus, textarea:focus) {
      border-color: var(--primary-color, var(--primary-color-fallback));
      box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
    }
    
    /* Using :has() selector - styles fieldset differently when submit button is present */
    &:has(.submit-btn) {
      padding-bottom: var(--spacing-xl);
    }
  }
  
  legend {
    font-weight: 600;
    padding: 0 var(--spacing-sm);
    color: var(--primary-color, var(--primary-color-fallback));
  }
  
  .form-group {
    margin-bottom: var(--spacing-lg);
    
    label {
      display: block;
      margin-bottom: var(--spacing-sm);
      font-weight: 500;
      color: var(--text-color);
    }
    
    input,
    textarea {
      width: 100%;
      padding: var(--spacing-md);
      border: 2px solid var(--border-color);
      border-radius: var(--border-radius);
      font-size: var(--font-size-base);
      transition: border-color var(--transition-base), box-shadow var(--transition-base);
      background: var(--background-color);
      
      &:focus {
        outline: none;
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
      }
    }
    
    textarea {
      resize: vertical;
      min-height: 120px;
    }
  }
  
  button {
    background: linear-gradient(135deg, var(--primary-color, var(--primary-color-fallback)), var(--secondary-color));
    color: white;
    border: none;
    padding: var(--spacing-sm) var(--spacing-lg);
    border-radius: var(--border-radius);
    font-weight: 500;
    cursor: pointer;
    transition: all var(--transition-base);
    position: relative;
    overflow: hidden;
    
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      transition: left var(--transition-slow);
    }
    
    &:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(37, 99, 235, 0.3);
      
      &::before {
        left: 100%;
      }
    }
    
    &:active {
      transform: translateY(0);
    }
  }
}

.submit-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-sm);
  background: linear-gradient(135deg, var(--primary-color), #1d4ed8);
  color: white;
  border: none;
  padding: var(--spacing-sm) var(--spacing-lg);
  border-radius: var(--border-radius);
  font-size: var(--font-size-base);
  font-weight: 500;
  cursor: pointer;
  transition: all var(--transition-base);
  box-shadow: var(--box-shadow);
  width: 10rem;
  align-self: flex-start;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px -5px rgba(37, 99, 235, 0.3);
    background: linear-gradient(135deg, #1d4ed8, var(--primary-color));
    
    .send-icon {
      transform: translateX(2px);
    }
  }
  
  &:active {
    transform: translateY(0);
  }
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}